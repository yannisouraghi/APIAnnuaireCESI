// <auto-generated />
using System;
using APIAnnuaire;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace APIAnnuaire.Migrations
{
    [DbContext(typeof(APIDbContext))]
    [Migration("20230913085321_CleanStart")]
    partial class CleanStart
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "7.0.10");

            modelBuilder.Entity("APIAnnuaire.Models.Employees", b =>
                {
                    b.Property<int>("EmployeeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Department")
                        .HasColumnType("TEXT");

                    b.Property<string>("Email")
                        .HasColumnType("TEXT");

                    b.Property<string>("FirstName")
                        .HasColumnType("TEXT");

                    b.Property<string>("JobDescription")
                        .HasColumnType("TEXT");

                    b.Property<string>("JobTitle")
                        .HasColumnType("TEXT");

                    b.Property<string>("LastName")
                        .HasColumnType("TEXT");

                    b.Property<string>("MobilePhone")
                        .HasColumnType("TEXT");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("TEXT");

                    b.Property<int?>("ServiceId")
                        .HasColumnType("INTEGER");

                    b.Property<int?>("ServicesServiceId")
                        .HasColumnType("INTEGER");

                    b.Property<int?>("SiteId")
                        .HasColumnType("INTEGER");

                    b.Property<int?>("SitesSiteId")
                        .HasColumnType("INTEGER");

                    b.HasKey("EmployeeId");

                    b.HasIndex("ServicesServiceId");

                    b.HasIndex("SitesSiteId");

                    b.ToTable("Employees");
                });

            modelBuilder.Entity("APIAnnuaire.Models.Services", b =>
                {
                    b.Property<int>("ServiceId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Service")
                        .HasColumnType("TEXT");

                    b.HasKey("ServiceId");

                    b.ToTable("Services");
                });

            modelBuilder.Entity("APIAnnuaire.Models.Sites", b =>
                {
                    b.Property<int>("SiteId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Address")
                        .HasColumnType("TEXT");

                    b.Property<string>("City")
                        .HasColumnType("TEXT");

                    b.Property<string>("Country")
                        .HasColumnType("TEXT");

                    b.Property<string>("Service")
                        .HasColumnType("TEXT");

                    b.Property<string>("ZipCode")
                        .HasColumnType("TEXT");

                    b.HasKey("SiteId");

                    b.ToTable("Sites");
                });

            modelBuilder.Entity("APIAnnuaire.Models.Employees", b =>
                {
                    b.HasOne("APIAnnuaire.Models.Services", "Services")
                        .WithMany()
                        .HasForeignKey("ServicesServiceId");

                    b.HasOne("APIAnnuaire.Models.Sites", "Sites")
                        .WithMany()
                        .HasForeignKey("SitesSiteId");

                    b.Navigation("Services");

                    b.Navigation("Sites");
                });
#pragma warning restore 612, 618
        }
    }
}
